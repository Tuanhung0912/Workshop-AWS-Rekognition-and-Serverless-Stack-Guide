[
{
	"uri": "//localhost:1313/",
	"title": "Intelligent Image Recognition",
	"tags": [],
	"description": "",
	"content": "Intelligent Image Recognition with Amazon Rekognition and Serverless Stack Overall In this lab, you will learn the basic concepts and practice using Amazon Rekognition – a powerful AI image recognition service, and how to implement a Serverless Stack solution. You will practice creating automated pipelines to analyze and recognize images using Amazon Rekognition, while integrating Serverless services such as AWS Lambda, S3, and API Gateway to build an intelligent image processing system.\nContent Introduction Preparation "
},
{
	"uri": "//localhost:1313/1-introduce/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "Amazon Rekognition is a powerful AI service from AWS that provides the ability to recognize and analyze images and videos. Amazon Rekognition helps you identify objects, faces, text, and scenes in images without the need to build complex deep learning models. Below is the deployment model of the lab:\nThe steps of operation of the model:\nStep 1: The user uploads an image from the web interface to perform image recognition. Step 2: The frontend sends the image via HTTP POST to API Gateway to initiate processing. Step 3: API Gateway triggers a Lambda function to handle the image analysis request. Step 4: The Lambda function logs activities (events, errors, recognition details) to CloudWatch for monitoring and tracking. Step 5: The Lambda function sends the image to the Rekognition service to analyze its content and extract information. Step 6: Rekognition returns the analysis results (labels, objects, confidence scores) in JSON format. Step 7: The Lambda function generates a JSON file containing the results and optionally processes the input image. Step 8: Both the original image and the JSON file are stored in an S3 bucket for long-term storage or sharing. Step 9: The Lambda function is granted permissions via an IAM Role to invoke Rekognition, write logs to CloudWatch, and upload data to S3. By using Amazon Rekognition, you will gain the following advantages:\nEasily identify objects and faces in images without needing to build your own AI model. Support for text analysis in images, helping to recognize information and text on photos. Can be configured and integrated with AWS Serverless services such as Lambda, S3, and API Gateway, enabling quick deployment and cost savings. Automates image and video analysis processes without the need for expensive hardware or infrastructure management. Provides easy-to-use APIs for image and video recognition, making it simple for developers to integrate into applications. Manages access permissions and security through AWS IAM to ensure compliance with company policies. Logs actions and analysis results, making it easy for users to track and verify the effectiveness of AI models. With these benefits, you can use Amazon Rekognition and Serverless Stack to build intelligent image recognition applications, saving time and costs in system deployment and maintenance.\n"
},
{
	"uri": "//localhost:1313/2-prerequiste/",
	"title": "Prerequiste",
	"tags": [],
	"description": "",
	"content": "Overview Before starting to implement the intelligent image recognition AI system, you need to prepare some basic components in the AWS environment to ensure the smooth process of analysis and storage. Specifically, you will create an S3 Bucket to store the original images uploaded by the user, as well as the analysis results in JSON format. Next, you need to configure an IAM Role with appropriate permissions such as AmazonS3FullAccess, AmazonRekognitionFullAccess, CloudWatchLogsFullAccess\u0026hellip; so that the Lambda function can call the Rekognition service, log data to CloudWatch, and write data to S3.\nContent Clone và Setup Front-End Create an S3 Bucket for storage Create IAM Role and Attach Policy "
},
{
	"uri": "//localhost:1313/2-prerequiste/2.1-clonefrontend/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/2-prerequiste/2.2-creates3bucket/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/2-prerequiste/2.3-createiamrole/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/3-lambdafunction/3.1-analyzefunction/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/3-lambdafunction/3.2-uploadfunction/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/3-lambdafunction/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/4-apigateway/4.1-analyzeimage/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/4-apigateway/4.2-uploadimage/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/4-apigateway/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/5-results/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/6-cloudwatch/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/7-s3policy/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/8-demo/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/9-cleanup/",
	"title": "",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]